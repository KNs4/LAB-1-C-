#include <iostream>
#include <cmath>
#include <string>

using namespace std;

// --- Модуль 1: Методы ---

// Функция для получения дробной части числа
double fraction(double x) {
    return x - static_cast<int>(x); // Вычитание целой части из числа
}

// Функция для проверки, является ли число двузначным
bool is2Digits(int x) {
    int absX = abs(x); // Получаем абсолютное значение числа
    return absX >= 10 && absX <= 99; // Проверяем, находится ли число в диапазоне от 10 до 99
}

// Функция для проверки, находится ли число в заданном диапазоне [a, b]
bool isInRange(int a, int b, int num) {
    int lower = (a < b) ? a : b; // Находим нижнюю границу
    int upper = (a > b) ? a : b; // Находим верхнюю границу
    return num >= lower && num <= upper; // Проверяем, попадает ли число в диапазон
}

// Функция для проверки равенства трех чисел
bool isEqual(int a, int b, int c) {
    return (a == b) && (b == c); // Проверяем, равны ли все три числа
}

// --- Модуль 2: Условия ---

// Функция для получения модуля числа
int customAbs(int x) {
    return (x < 0) ? -x : x; // Возвращаем отрицательное число в положительном виде
}

// Функция для проверки делимости числа на 3 или 5 (исключая оба)
bool is35(int x) {
    return (x % 3 == 0) ^ (x % 5 == 0); // Используем исключающее ИЛИ для проверки
}

// Функция для нахождения максимального из трех чисел
int max3(int x, int y, int z) {
    return (x > y) ? ((x > z) ? x : z) : ((y > z) ? y : z); // Сравниваем числа и возвращаем максимальное
}

// Функция для суммирования двух чисел с условием
int sum2(int x, int y) {
    int sum = x + y; // Суммируем два числа
    return (sum >= 10 && sum <= 19) ? 20 : sum; // Если сумма в диапазоне от 10 до 19, возвращаем 20
}

// Функция для получения названия дня недели по номеру
string day(int x) {
    switch (x) {
        case 1: return "понедельник";
        case 2: return "вторник";
        case 3: return "среда";
        case 4: return "четверг";
        case 5: return "пятница";
        case 6: return "суббота";
        case 7: return "воскресенье";
        default: return "это не день недели"; // Если введен некорректный номер
    }
}

// --- Модуль 3: Циклы ---

// Функция для перечисления чисел от 0 до x в строковом формате
string listNums(int x) {
    string result = ""; // Инициализируем пустую строку для результата
    for (int i = 0; i <= x; ++i) { // Цикл от 0 до x
        result += to_string(i); // Добавляем текущее число в строку
        if (i < x) result += " "; // Добавляем пробел между числами
    }
    return result; // Возвращаем результат
}

// Функция для перечисления четных чисел от 0 до x
string chet(int x) {
    string result = ""; // Инициализируем пустую строку для результата
    for (int i = 0; i <= x; i += 2) { // Цикл от 0 до x с шагом 2
        result += to_string(i); // Добавляем текущее четное число в строку
        if (i + 2 <= x) result += " "; // Добавляем пробел между четными числами
    }
    return result; // Возвращаем результат
}

// Функция для нахождения длины числа (количества цифр)
int numLen(long x) {
    int length = 0; // Инициализируем счетчик длины
    if (x == 0) return 1; // Если число равно нулю, длина равна 1

    x = customAbs(x); // Получаем абсолютное значение числа
    while (x > 0) { // Пока число больше нуля
        x /= 10; // Делим число на 10
        length++; // Увеличиваем счетчик длины
    }
    return length; // Возвращаем длину числа
}

// Функция для вывода квадрата звездочек размером x на x
void square(int x) {
    for (int i = 0; i < x; ++i) { // Внешний цикл по строкам
        for (int j = 0; j < x; ++j) { // Внутренний цикл по столбцам
            cout << '*'; // Выводим звездочку
        }
        cout << endl; // Переход на новую строку после завершения строки
    }
}

// Функция для вывода прямоугольного треугольника из звездочек размером x
void rightTriangle(int x) {
    for (int i = 1; i <= x; ++i) { // Внешний цикл по строкам
        for (int j = 0; j < x - i; ++j) { // Внутренний цикл для пробелов перед звездочками
                    cout << ' '; // Выводим пробелы для выравнивания треугольника
        }
        for (int j = 0; j < i; ++j) { // Внутренний цикл по количеству звездочек в строке
            cout << '*'; // Выводим звездочку
        }
        cout << endl; // Переход на новую строку после завершения строки
    }
}

// --- Модуль 4: Массивы ---

// Функция для нахождения максимального по модулю значения в массиве
int maxAbs(int arr[], int size) {
    int max_value = arr[0]; // Инициализируем максимальное значение первым элементом массива
    for (int i = 1; i < size; ++i) { // Проходим по остальным элементам массива
        if (abs(arr[i]) > abs(max_value)) { // Сравниваем модуль текущего элемента с модулем максимального значения
            max_value = arr[i]; // Обновляем максимальное значение, если текущий элемент больше по модулю
        }
    }
    return abs(max_value); // Возвращаем найденное максимальное значение по модулю
}

// Главная функция программы
int main() {
    // Пример использования функций:
    
    // Получение дробной части числа
    double number;
    cout << "Введите число для получения дробной части: ";
    cin >> number;
    cout << "Дробная часть числа " << number << ": " << fraction(number) << endl;

    // Проверка, является ли число двузначным
    int num;
    cout << "Введите целое число для проверки двузначности: ";
    cin >> num;
    cout << (is2Digits(num) ? "Число двузначное." : "Число не двузначное.") << endl;

    // Проверка, входит ли число в диапазон [a, b]
    int a, b, checkNum;
    cout << "Введите два границ диапазона (a, b): ";
    cin >> a >> b;
    cout << "Введите число для проверки вхождения в диапазон: ";
    cin >> checkNum;
    cout << (isInRange(a, b, checkNum) ? "Число входит в диапазон." : "Число не входит в диапазон.") << endl;

    // Проверка равенства трех чисел
    int a2, b2, c;
    cout << "Введите три целых числа для проверки равенства: ";
    cin >> a2 >> b2 >> c;
    cout << (isEqual(a2, b2, c) ? "Все числа равны." : "Числа не равны.") << endl;

    // Получение модуля числа
    int numForAbs;
    cout << "Введите число для получения модуля: ";
    cin >> numForAbs;
    cout << "Модуль числа " << numForAbs << ": " << customAbs(numForAbs) << endl;

    // Проверка делимости на 3 или 5
    int numForDiv;
    cout << "Введите число для проверки делимости на 3 или 5: ";
    cin >> numForDiv;
    cout << (is35(numForDiv) ? "Число делится на 3 или 5." : "Число не делится на 3 или 5.") << endl;

    // Нахождение максимума из трех чисел
    int num1, num2, num3;
    cout << "Введите три целых числа для нахождения максимума: ";
    cin >> num1 >> num2 >> num3;
    // Нахождение максимума из трех чисел
    cout << "Максимум из трех чисел: " << max3(num1, num2, num3) << endl;
    // Вводим три числа (num1, num2, num3) и выводим максимальное из них с помощью функции max3.
    
    
    // Выполнение двойной суммы
    int x1, x2;
    cout << "Введите два числа для двойной суммы: "; 
    cin >> x1 >> x2;
    // Запрашиваем у пользователя два числа для вычисления двойной суммы.
    cout << "Результат двойной суммы: " << sum2(x1, x2) << endl;
    // Вызываем функцию sum2, которая возвращает сумму двух чисел с условием, и выводим результат.
    
    
    // Получение названия дня недели
    int dayNum;
    cout << "Введите число от 1 до 7 для получения дня недели: "; 
    cin >> dayNum;
    // Запрашиваем номер дня недели у пользователя.
    cout << "День недели для числа " << dayNum << ": " << day(dayNum) << endl;
    // Вызываем функцию day, которая возвращает название дня недели по номеру, и выводим результат.
    
    
    // Получение строки с числами от 0 до x
    int rangeNum;
    cout << "Введите число x для получения строку с числами от 0 до x: "; 
    cin >> rangeNum;
    // Запрашиваем у пользователя число x.
    cout << "Числа от 0 до " << rangeNum << ": " << listNums(rangeNum) << endl;
    // Вызываем функцию listNums, которая возвращает строку с числами от 0 до x, и выводим результат.
    
    
    // Получение строки с четными числами от 0 до x
    cout << "Четные числа от 0 до " << rangeNum << ": " << chet(rangeNum) << endl;
    // Вызываем функцию chet, которая возвращает строку с четными числами от 0 до x, и выводим результат.
    
    
    // Получение длины числа
    long longNum;
    cout << "Введите число для получения его длины: "; 
    cin >> longNum;
    // Запрашиваем у пользователя число для определения его длины.
    cout << "Длина числа " << longNum << ": " << numLen(longNum) << endl;
    // Вызываем функцию numLen, которая возвращает количество цифр в числе, и выводим результат.
    
    
    // Вывод квадрата из символов '*'
    int squareSize;
    cout << "Введите размер квадрата: "; 
    cin >> squareSize;
    // Запрашиваем у пользователя размер квадрата.
    cout << "Квадрат размера " << squareSize << ":\n"; 
    square(squareSize);
    // Вызываем функцию square, которая выводит квадрат заданного размера из символов '*'.
    
    
    // Вывод правого треугольника из символов '*'
    int triangleSize;
    cout << "Введите размер треугольника: "; 
    cin >> triangleSize;
    // Запрашиваем у пользователя размер треугольника.
    cout << "Правый треугольник размера " << triangleSize << ":\n"; 
    rightTriangle(triangleSize);
    // Вызываем функцию rightTriangle, которая выводит правый треугольник заданного размера из символов '*'.
    
    
    // Нахождение максимума по модулю в массиве
    const int SIZE = 5;
    int arr[SIZE];
    cout << "Введите " << SIZE << " целых числа для нахождения максимума по модулю: "; 
    for (int i = 0; i < SIZE; ++i) {
        cin >> arr[i]; // Заполняем массив введенными пользователем числами.
    }
    cout << "Максимальное по модулю значение: " << maxAbs(arr, SIZE) << endl;
    // Вызываем функцию maxAbs, которая находит максимальное значение по модулю в массиве, и выводим результат.
    
    return 0; // Завершение программы.
}
